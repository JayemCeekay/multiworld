plugins {
    id "com.github.johnrengelman.shadow" version "7.1.1"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modApi "net.fabricmc.fabric-api:fabric-api-deprecated:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    // modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    
     // LuckPerms API
    modImplementation('me.lucko:fabric-permissions-api:0.1-SNAPSHOT')

    // Fabric Permissions API 
    modImplementation('com.javazilla.mods:permissions:1.3')
    
    // Fantasy API

    
    modImplementation('xyz.nucleoid:fantasy:0.4.6+1.19.2')
	modImplementation('xyz.nucleoid:fantasy:0.4.4+1.18.2')

    //include(modImplementation(fileTree(dir: 'libs', include: "fantasy-1.19.jar")))
    modImplementation(fileTree(dir: 'libs', include: "text-backwards-support-lib-0.1.jar"))
	println('Test:' + fileTree(dir: 'libs', include: "text-backwards-support-lib-0.1.jar"))
	include(fileTree(dir: 'libs', include: "text-backwards-support-lib-0.1.jar"))




    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
	
	// Add a nested mod jar to this task, the include configuration should be used for maven libraries and mods.
	//nestedJars.from file("libs/text-backwards-support-lib-0.1.jar")
	//nestedJars.from file("libs/fantasy-0.4.4+1.18.2.jar")
	nestedJars.from file("libs/fantasy-0.4.7+1.19.2.jar")

	addNestedDependencies = true
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
